start the terraform script with terraform apply command
all the resources will be created as instructured in the terraform script.
now run ansible script to install necessary softwares in tools instances.
login to the kubemaster, slave1 and slave2 instance using ssh from tools instance and install kubeadm and java.
	create a bash file with kubeadm and java installation instruction provided in the installs dir of the terraform folder
	make the file executable
	run the file and it will install them.
	do this on all the nodes master, slave1 and slave2
	
now create the kubeadm cluster with the instructions provided here - https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/
	initialzie the cluster with "sudo kubeadm init" command on master node and follow the instructions provided.
	To start using your cluster, you need to run the following as a regular user:

	  mkdir -p $HOME/.kube
	  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
	  sudo chown $(id -u):$(id -g) $HOME/.kube/config
	
After initializing the cluster with "kubeadm init", you need to install network pods too for networking. you can use the below command
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

now join the nodes by executing the "sudo join" command provided above on the slave nodes.
now you can check if the nodes are added or not using "kubectl get nodes" command

you will be able to get nodes from master nodes, but if you run "get nodes" from slave nodes it will give an error as we need to configure the slave nodes to access the api server with proper credentials.
so copy the config file in master nodes to the slave node and set the KUBECONFIG env variable to the path/to/configfile in the slave node by using command "export KUBECONFIG = path/to/config"
now you will be able to access the api servers from slave nodes too.

now configure the jenkins and create pipeline jobs
login to jenkins
if you face "unable to connect to jenkins server" error when installing plugins after login, then do the following
	1. Add Jenkins user to root group: sudo usermod -a -G root jenkins
	2. Make Jenkins listen to all external IPs by editing file /etc/default/jenkins and add/changing the 		JENKINS_LISTEN_ADDRESS="0.0.0.0"

	3. Once this is done, restart the jenkins server and then try to install plugins for jenkins.
